{"ast":null,"code":"class GeminiService {\n  constructor() {\n    this.baseUrl = 'http://localhost:3001/api/gemini';\n  }\n  async summarizeNews(newsContent) {\n    try {\n      const response = await fetch(`${this.baseUrl}/summarize`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newsContent: newsContent\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to generate summary');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error summarizing news:', error);\n      throw new Error('Failed to generate summary');\n    }\n  }\n}\nconst geminiServiceInstance = new GeminiService();\nexport default geminiServiceInstance;","map":{"version":3,"names":["GeminiService","constructor","baseUrl","summarizeNews","newsContent","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","data","console","geminiServiceInstance"],"sources":["D:/Capstoneprojectai/Newsapp/NewsHub/src/services/geminiService.js"],"sourcesContent":["class GeminiService {\n  constructor() {\n    this.baseUrl = 'http://localhost:3001/api/gemini';\n  }\n\n  async summarizeNews(newsContent) {\n    try {\n      const response = await fetch(`${this.baseUrl}/summarize`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          newsContent: newsContent\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to generate summary');\n      }\n      \n      const data = await response.json();\n      return data;\n      \n    } catch (error) {\n      console.error('Error summarizing news:', error);\n      throw new Error('Failed to generate summary');\n    }\n  }\n}\n\nconst geminiServiceInstance = new GeminiService();\nexport default geminiServiceInstance;"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,kCAAkC;EACnD;EAEA,MAAMC,aAAaA,CAACC,WAAW,EAAE;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACJ,OAAO,YAAY,EAAE;QACxDK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBP,WAAW,EAAEA;QACf,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,4BAA4B,CAAC;MAClE;MAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,OAAOG,IAAI;IAEb,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAID,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EACF;AACF;AAEA,MAAMI,qBAAqB,GAAG,IAAInB,aAAa,CAAC,CAAC;AACjD,eAAemB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}